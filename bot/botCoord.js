const env = require('../.env')
const Telegraf = require('telegraf')
const bot = new Telegraf(env.token)

bot.start(async ctx => {
    await ctx.reply(`Olá ${ctx.update.message.from.first_name}, eu sou o bot (robô) da coordenação do IFCE Campus Jaguaribe! Estou aqui para lhe ajudar a tirar dúvidas da coordenação. Segue abaixo uma lista contendo os serviços da coordenação:`)
    await ctx.reply('JUSTIFICATIVA DE FALTA (/justificativafalta)')
    await ctx.reply('SEGUNDA CHAMADA (/segundachamada)')
    await ctx.reply('NADA CONSTA DE LIVROS (/nadaconstalivros)')
    await ctx.reply('HORÁRIO DE ATENDIMENTO AOS ALUNOS (/atendimento)')
})

bot.hears('/justificativafalta', async ctx => {
    await ctx.replyWithMarkdown('*O que é?*')
    await ctx.reply('O estudante que faltar uma aula, por motivo de força maior, pode justificar a sua ausência através de documentos comprovatórios.')
    await ctx.replyWithMarkdown('*Qual o prazo?*')
    await ctx.reply('Até 5 dias letivos após o primeiro dia de ausência.')
    await ctx.replyWithMarkdown('*Como solicitar?*')
    await ctx.reply('O estudante deve protocolar requerimento na recepção do campus, acompanhado obrigatoriamente de um dos documentos especificados a seguir:')
    await ctx.reply('I.   Atestado médico;')
    await ctx.reply('II.   Declaração de corporação militar, empresa ou repartição, comprovando que no horário da realização da primeira chamada, estava em serviço;')
    await ctx.reply('III.   Atestado de óbito de parentes até segundo grau;')
    await ctx.reply('IV.   Outro documento, a ser analisado pela coordenadoria de curso.')
    await ctx.replyWithMarkdown('*OBS:* Caso a justificativa não se enquadre nos itens I, II ou III, o estudante deve solicitar na recepção do campus o formulário "Declaração de Justificativa de Falta", preencher todos os campos e anexá-lo ao requerimento.')
    await ctx.replyWithMarkdown('*E depois?*')
    await ctx.reply('A coordenação do curso enviará para o estudante, em até 3 dias, o parecer final.')
})

bot.hears('/segundachamada', async ctx => {
    await ctx.replyWithMarkdown('*O que é?*')
    await ctx.reply('O estudante que falta uma atividade avaliativa, por motivo de força maior, pode solicitar a realização de uma avaliação substitutiva, desde que apresente uma justificativa válida.')
    await ctx.replyWithMarkdown('*Qual o prazo?*')
    await ctx.reply('Até 5 dias letivos após a data da realização da primeira chamada da avaliação.')
    await ctx.replyWithMarkdown('*Como solicitar?*')
    await ctx.reply('O estudante deve protocolar requerimento na recepção do campus, acompanhado obrigatoriamente de um dos documentos especificados a seguir:')
    await ctx.reply('I.   Atestado médico;')
    await ctx.reply('II.   Declaração de corporação militar, empresa ou repartição, comprovando que no horário da realização da primeira chamada, estava em serviço;')
    await ctx.reply('III.   Atestado de óbito de parentes até segundo grau;')
    await ctx.reply('IV.   Outro documento, a ser analisado pela coordenadoria de curso.')
    await ctx.replyWithMarkdown('*OBS:* Caso a justificativa não se enquadre nos itens I, II ou III, o estudante deve solicitar na recepção do campus o formulário "Declaração de Justificativa de Falta", preencher todos os campos e anexá-lo ao requerimento.')
    await ctx.replyWithMarkdown('*E depois?*')
    await ctx.reply('A coordenação emitirá, em até 3 dias, o parecer final. Caso referido, a segunda chamada será realizada em até 10 dias letivos a partir da data do requerimento.')
})

bot.hears('/nadaconstalivros', async ctx => {
    await ctx.replyWithMarkdown('*O que é?*')
    await ctx.reply('Em diversos processos do IFCE, é solicitado uma declaração da biblioteca informando que o estudante não possui pendências relativas ao empréstimo de livros e/ou pagamento de multas.')
    await ctx.replyWithMarkdown('*OBS:* Esta declaração é diferente do "Nada Consta" relativa a entrega do Trabaho de Conclusão de Curso (TCC).')
    await ctx.replyWithMarkdown('*Qual o prazo?*')
    await ctx.reply('Pode-se solicitar a declaração durante todo o semestre letivo.')
    await ctx.replyWithMarkdown('*Como solicitar?*')
    await ctx.reply('O estudante deve protocolar requerimento na recepção do campus, informando que deseja o "Nada Consta de Livros da Biblioteca", e solicitar o envio desse requerimento para a Biblioteca.')
    await ctx.replyWithMarkdown('*E depois?*')
    await ctx.reply('A biblioteca emitirá, em até 5 dias letivos, a declaração de "Nada Consta" assinada digitalmente. Esse documento digital será enviado para a recepção do campus, e estará à disposição do estudante para impressão. O requerente deve ter o número do processo em mãos, para que a recepção realize a impressão.')
})

bot.hears('/atendimento', async ctx => {
    await ctx.replyWithMarkdown('*HORÁRIO DE ATENDIMENTO AOS ALUNOS (REDES DE COMPUTADORES) - 2019.2*')
    await ctx.reply('Prof. Augusto Peixoto: Quarta-feira (09:00 às 12:00);')
    await ctx.reply('Prof. Bruno Neves: Quinta-feira (15:00 às 18:00);')
    await ctx.reply('Prof. Daniel Cavalcante: Quinta-feira (15:00 às 17:00);')
    await ctx.reply('Prof. Guilherme Matias: Segunda-feira (13:00 às 16:00);')
    await ctx.reply('Prof. Gustavo Coutinho: Quinta-feira (13:00 às 17:00);')
    await ctx.reply('Prof. Herleson Pontes: Terça-feira (13:00 às 17:00);')
    await ctx.reply('Prof. Isaac Miranda: Terça-feira (08:00 às 11:00);')
    await ctx.reply('Prof. Jardel Rodrigues: Terça-feira (14:00 às 17:00);')
    await ctx.reply('Prof. Marianny Fidelis: Terça-feira (13:00 às 17:00);')
    await ctx.reply('Prof. Rachel Magalhães: Quarta-feira (14:00 às 15:00), Quinta (09:15 às 10:15 e 13:00 às 14:00);')
    await ctx.reply('Prof. Rafael Carneiro: Quinta-feira (11:00 às 12:00);')
    await ctx.reply('Prof. Sinval Farias: Quinta-feira (18:00 às 20:00);')
    await ctx.reply('Prof. Vaux Sandino: Terça-feira (13:00 às 17:00);')
    await ctx.reply('Prof. Yasmin Arruda: Segunda-feira (09:00 às 11:00);')
    await ctx.reply('Prof. Vitor Adler: Segunda-feira (15:00 às 17:00);')
})

bot.startPolling()